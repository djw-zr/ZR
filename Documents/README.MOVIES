README.MOVIES
=============

1.  Introduction

    In principal movies can be created from the scenes generated by ZR in three different ways.  In all three methods the main problem arising is the conflicting demands of the 3-D graphics, used by ZR, and that required for processing and/or saving the image data.  All three methods make use of ffmpeg (https://ffmpeg.org/) either by using the ffmpeg command or the ffmpeg subroutine libraries.  The ffmpeg subroutines also underly most, if not all, video editors.

    All three methods require the ffmpeg libraries at some stage, but the last two only need the libraries at the post-processing stage.  The ffmpeg libraries are libavutil, libavcodec, libavformat, libavdevice, libavfilter, libavresample, libswscale, libswresample and libpostproc.  Normally they are all loaded when the ffmpeg program is installed.

    The second method described below, also involves installation of the library include files.  These are included in packages with names like 'libavutil-develop'.

    The third method does not need the ffmpeg libraries at this stage but requires the png libary to be installed.

 2. X11 grabbing

    While ZR is running it is possible to grab a stream of images from the screen.  Normally ZR starts with the window origin at point (100,100), a width of 1500 pixels and a height of 1000 pixels.  If the program is compiled with the command line option -DFFMPEG then a standard 'xga' window size is used.  This has a width of 1024 pixels and a height of 768 pixels.  This is done partly to use one of the standard sizes, which simplifies processing.  However the main aim is to reduce the size of the files and the CPU overhead required to generate them.

    For the above window position the ffmpeg command is:

      ffmpeg -y -f x11grab -video_size xga -framerate 25 -i :0.0+100,100 -c:v mpeg1video -profile high movie.mpg

    The 0.0 is the display.screen number of your X11 server, the same as the DISPLAY environemnt variable.  The +100,100 is then the pixel offset to the origin of the ZR window.  The value of DISPLAY can be checked with the terminal command:

      echo $DISPLAY

    The above mpeg command will captude the screen until 'q' is typed in the window where the ffmpeg command was issued.  The movie can then be played using:

      ffplay movie.mpg

    The quality of the resulting movie is not great.  The command 'ffprobe movie.mpg, then shows that it was generated using the old 'mpeg1video' codec.  This is out of copyright.

2.1  Improved quality

    Better quality can be obtained with the later h264 codec and its variants.  The codec is still in copyright but can usually be used for home use.  The corresponding command is:

      ffmpeg -y -f x11grab -video_size xga -framerate 25 -i :0.0+100,100 -c:v libx264 -preset veryfast -crf 25 movie.mpg

    The parameter '-crf 25' specifies  the final quality, smaller values being better but reauiring more processing of each frame. The parameter '-preset veryfast' also controls the effort processing each frame.  A value of 'slow' requires the program to take more case with each frame.  This results in a smaller file size but frames may be dropped.

    ffmpeg can also be used to output files in other formats but that is outside the scope of this note.

3.  Direct generation of movie

    If the ZR program is compiled with the command line directive -DFFMPEG, then the ffmpeg libraries are loaded.  When ZR is running, movie capture is started and stopped with the key combination 'Shift-Alt-m'.  Movies are placed in sub-directory MOVIE amd have names of the form 'movie_SSS.mov', where SSS is the shot number.  This starts at '001', and is incremented by one with each new shot.

4.  Generation of Images

    An alternative route is to save a sequence of images in which no image quality is lost and to later generate a good quality movie without any time pressures.

4.1 PNG Images

    Sequences of PNG images can be generated after compiling the program with the command line directive -DLIBPNG.  The generation of image files is then started and stopped with the key combination 'Shift-Alt-m' as before.  The sequence is saved in the MOVIE directory using names of the form 'movie_SSS_NNNN.png', where SSS is the shot and NNN the number of the image in the sequence.

    Shot SSS in such a sequence can later be converted into a movie with the command:

      ffmpeg -y -f image2 -i movie_SSS_%04d.mov -framerate 25 -c:v libx264 -preset slow -crf 25 movie_SSS.mpg

    Video editing software, or ffmpeg, can then be used to combine and edit many such shots.

4.2  PPM Images

    If the PNG library is not available then the program can generate PPM images without any additional libraries.  The only problem with this method is that the files are twice the size of the corresponding PNG files.  Writing of files to disk can be slow and this can result in frames being missed.

    This is also a problem when generating PNG images.  When ZR is running the key combination 'Shift-Z', brings up information of the number of frames per second drawn to the screen.  If this is less than 25 fps, then the numebr of images generated will  be less than the 25 per second needed to generate smooth video.
